import React, { useState } from "react";
import "../../css/Parent/ManageHealthRecords.css";

function ManageHealthRecords() {
  const [selectedRecord, setSelectedRecord] = useState(null);
  const [showModal, setShowModal] = useState(false);

  // Mock data
  const healthRecords = [
    {
      id: 1,
      studentName: "Nguy·ªÖn Minh Kh√¥i",
      recordType: "Ti·ªÅn s·ª≠ b·ªánh",
      title: "D·ªã ·ª©ng th·ª©c ƒÉn",
      description: "D·ªã ·ª©ng v·ªõi t√¥m cua v√† c√°c lo·∫°i h·∫£i s·∫£n",
      severity: "medium",
      date: "2024-01-15",
      status: "active",
      doctor: "BS. Nguy·ªÖn Th·ªã Lan",
      medications: ["Thu·ªëc ch·ªëng d·ªã ·ª©ng Cetirizine"],
      notes: "Tr√°nh ti·∫øp x√∫c v·ªõi h·∫£i s·∫£n, lu√¥n mang theo thu·ªëc",
    },
    {
      id: 2,
      studentName: "Nguy·ªÖn Minh Kh√¥i",
      recordType: "B·ªánh m√£n t√≠nh",
      title: "Hen suy·ªÖn nh·∫π",
      description: "Hen suy·ªÖn do v·∫≠n ƒë·ªông m·∫°nh",
      severity: "low",
      date: "2023-09-10",
      status: "monitoring",
      doctor: "BS. Ph·∫°m VƒÉn Minh",
      medications: ["B√¨nh x·ªãt Ventolin"],
      notes: "Tr√°nh v·∫≠n ƒë·ªông qu√° s·ª©c, ngh·ªâ ng∆°i khi kh√≥ th·ªü",
    },
    {
      id: 3,
      studentName: "Nguy·ªÖn Minh Kh√¥i",
      recordType: "Th√¥ng tin s·ª©c kh·ªèe",
      title: "Nh√≥m m√°u",
      description: "Nh√≥m m√°u O+",
      severity: "info",
      date: "2023-08-01",
      status: "active",
      doctor: "Y t√° L√™ Th·ªã Hoa",
      medications: [],
      notes: "Th√¥ng tin nh√≥m m√°u cho tr∆∞·ªùng h·ª£p c·∫•p c·ª©u",
    },
  ];

  const recordTypes = [
    { id: "medical_history", name: "Ti·ªÅn s·ª≠ b·ªánh", icon: "üìã" },
    { id: "chronic_disease", name: "B·ªánh m√£n t√≠nh", icon: "üè•" },
    { id: "allergy", name: "D·ªã ·ª©ng", icon: "‚ö†Ô∏è" },
    { id: "medication", name: "Thu·ªëc ƒëang d√πng", icon: "üíä" },
    { id: "health_info", name: "Th√¥ng tin s·ª©c kh·ªèe", icon: "üìÑ" },
  ];

  const getSeverityColor = (severity) => {
    const colors = {
      high: "#dc3545",
      medium: "#ffc107",
      low: "#28a745",
      info: "#17a2b8",
    };
    return colors[severity] || "#6c757d";
  };

  const getSeverityText = (severity) => {
    const texts = {
      high: "Cao",
      medium: "Trung b√¨nh",
      low: "Th·∫•p",
      info: "Th√¥ng tin",
    };
    return texts[severity] || severity;
  };

  const getStatusColor = (status) => {
    const colors = {
      active: "#28a745",
      monitoring: "#ffc107",
      resolved: "#6c757d",
    };
    return colors[status] || "#6c757d";
  };

  const getStatusText = (status) => {
    const texts = {
      active: "ƒêang theo d√µi",
      monitoring: "C·∫ßn gi√°m s√°t",
      resolved: "ƒê√£ kh·ªèi",
    };
    return texts[status] || status;
  };

  const handleViewRecord = (record) => {
    setSelectedRecord(record);
    setShowModal(true);
  };

  return (
    <div className="manage-health-records-container">
      {/* Header */}
      <div className="page-header">
        <div className="header-content">
          <h1>üìã Qu·∫£n L√Ω H·ªì S∆° S·ª©c Kh·ªèe</h1>
          <p>Qu·∫£n l√Ω v√† theo d√µi h·ªì s∆° s·ª©c kh·ªèe c·ªßa con em</p>
        </div>
        <div className="header-actions">
          <button className="add-record-btn">‚ûï Th√™m h·ªì s∆° m·ªõi</button>
          <button className="export-btn">üìä Xu·∫•t b√°o c√°o</button>
        </div>
      </div>

      {/* Quick Stats */}
      <div className="stats-cards">
        <div className="stat-card total">
          <div className="stat-icon">üìã</div>
          <div className="stat-content">
            <h3>{healthRecords.length}</h3>
            <p>T·ªïng s·ªë h·ªì s∆°</p>
          </div>
        </div>
        <div className="stat-card active">
          <div className="stat-icon">üî¥</div>
          <div className="stat-content">
            <h3>{healthRecords.filter((r) => r.status === "active").length}</h3>
            <p>ƒêang theo d√µi</p>
          </div>
        </div>
        <div className="stat-card monitoring">
          <div className="stat-icon">üü°</div>
          <div className="stat-content">
            <h3>
              {healthRecords.filter((r) => r.status === "monitoring").length}
            </h3>
            <p>C·∫ßn gi√°m s√°t</p>
          </div>
        </div>
        <div className="stat-card high-priority">
          <div className="stat-icon">‚ö†Ô∏è</div>
          <div className="stat-content">
            <h3>{healthRecords.filter((r) => r.severity === "high").length}</h3>
            <p>M·ª©c ƒë·ªô cao</p>
          </div>
        </div>
      </div>

      {/* Record Types Filter */}
      <div className="filter-section">
        <h3>üìÇ Ph√¢n lo·∫°i h·ªì s∆°</h3>
        <div className="record-types">
          {recordTypes.map((type) => (
            <button key={type.id} className="type-btn">
              <span className="type-icon">{type.icon}</span>
              <span>{type.name}</span>
            </button>
          ))}
        </div>
      </div>

      {/* Health Records List */}
      <div className="records-section">
        <h3>üìã Danh s√°ch h·ªì s∆° s·ª©c kh·ªèe</h3>
        <div className="records-grid">
          {healthRecords.map((record) => (
            <div key={record.id} className="record-card">
              <div className="record-header">
                <div className="record-title">
                  <h4>{record.title}</h4>
                  <span className="record-type">{record.recordType}</span>
                </div>
                <div className="record-meta">
                  <span
                    className="severity-badge"
                    style={{
                      backgroundColor: getSeverityColor(record.severity),
                    }}
                  >
                    {getSeverityText(record.severity)}
                  </span>
                  <span
                    className="status-badge"
                    style={{ backgroundColor: getStatusColor(record.status) }}
                  >
                    {getStatusText(record.status)}
                  </span>
                </div>
              </div>

              <div className="record-content">
                <p className="record-description">{record.description}</p>

                <div className="record-details">
                  <div className="detail-item">
                    <span className="detail-label">üìÖ Ng√†y t·∫°o:</span>
                    <span>{record.date}</span>
                  </div>
                  <div className="detail-item">
                    <span className="detail-label">üë®‚Äç‚öïÔ∏è B√°c sƒ©:</span>
                    <span>{record.doctor}</span>
                  </div>
                  {record.medications.length > 0 && (
                    <div className="detail-item">
                      <span className="detail-label">üíä Thu·ªëc:</span>
                      <span>{record.medications.join(", ")}</span>
                    </div>
                  )}
                </div>

                <div className="record-notes">
                  <strong>üìù Ghi ch√∫:</strong>
                  <p>{record.notes}</p>
                </div>
              </div>

              <div className="record-actions">
                <button
                  className="view-btn"
                  onClick={() => handleViewRecord(record)}
                >
                  üëÅÔ∏è Xem chi ti·∫øt
                </button>
                <button className="edit-btn">‚úèÔ∏è Ch·ªânh s·ª≠a</button>
                <button className="share-btn">üì§ Chia s·∫ª</button>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Important Health Information */}
      <div className="important-info">
        <h3>‚ö†Ô∏è Th√¥ng tin quan tr·ªçng</h3>
        <div className="info-grid">
          <div className="info-card emergency">
            <div className="info-header">
              <span className="info-icon">üö®</span>
              <h4>Th√¥ng tin c·∫•p c·ª©u</h4>
            </div>
            <div className="info-content">
              <p>
                <strong>D·ªã ·ª©ng:</strong> H·∫£i s·∫£n (t√¥m, cua)
              </p>
              <p>
                <strong>Nh√≥m m√°u:</strong> O+
              </p>
              <p>
                <strong>Thu·ªëc c·∫ßn thi·∫øt:</strong> Cetirizine, Ventolin
              </p>
            </div>
          </div>
          <div className="info-card contact">
            <div className="info-header">
              <span className="info-icon">üìû</span>
              <h4>Li√™n h·ªá kh·∫©n c·∫•p</h4>
            </div>
            <div className="info-content">
              <p>
                <strong>Ph·ª• huynh:</strong> 0901-234-567
              </p>
              <p>
                <strong>B√°c sƒ© gia ƒë√¨nh:</strong> 0912-345-678
              </p>
              <p>
                <strong>Y t·∫ø tr∆∞·ªùng:</strong> 1900-1234
              </p>
            </div>
          </div>
        </div>
      </div>

      {/* View Record Modal */}
      {showModal && selectedRecord && (
        <div className="modal-overlay" onClick={() => setShowModal(false)}>
          <div className="modal-content" onClick={(e) => e.stopPropagation()}>
            <div className="modal-header">
              <h3>üìã Chi ti·∫øt h·ªì s∆° s·ª©c kh·ªèe</h3>
              <button
                className="modal-close"
                onClick={() => setShowModal(false)}
              >
                √ó
              </button>
            </div>

            <div className="modal-body">
              <div className="record-detail">
                <div className="detail-section">
                  <h4>üìÑ Th√¥ng tin c∆° b·∫£n</h4>
                  <div className="detail-grid">
                    <div className="detail-item">
                      <label>Ti√™u ƒë·ªÅ:</label>
                      <span>{selectedRecord.title}</span>
                    </div>
                    <div className="detail-item">
                      <label>Lo·∫°i h·ªì s∆°:</label>
                      <span>{selectedRecord.recordType}</span>
                    </div>
                    <div className="detail-item">
                      <label>M·ª©c ƒë·ªô:</label>
                      <span
                        style={{
                          color: getSeverityColor(selectedRecord.severity),
                        }}
                      >
                        {getSeverityText(selectedRecord.severity)}
                      </span>
                    </div>
                    <div className="detail-item">
                      <label>Tr·∫°ng th√°i:</label>
                      <span
                        style={{ color: getStatusColor(selectedRecord.status) }}
                      >
                        {getStatusText(selectedRecord.status)}
                      </span>
                    </div>
                  </div>
                </div>

                <div className="detail-section">
                  <h4>üìù M√¥ t·∫£ chi ti·∫øt</h4>
                  <p>{selectedRecord.description}</p>
                </div>

                {selectedRecord.medications.length > 0 && (
                  <div className="detail-section">
                    <h4>üíä Thu·ªëc ƒëang s·ª≠ d·ª•ng</h4>
                    <ul>
                      {selectedRecord.medications.map((med, index) => (
                        <li key={index}>{med}</li>
                      ))}
                    </ul>
                  </div>
                )}

                <div className="detail-section">
                  <h4>üìã Ghi ch√∫ v√† h∆∞·ªõng d·∫´n</h4>
                  <p>{selectedRecord.notes}</p>
                </div>

                <div className="detail-section">
                  <h4>üë®‚Äç‚öïÔ∏è Th√¥ng tin y t·∫ø</h4>
                  <div className="detail-grid">
                    <div className="detail-item">
                      <label>Ng√†y t·∫°o:</label>
                      <span>{selectedRecord.date}</span>
                    </div>
                    <div className="detail-item">
                      <label>B√°c sƒ© ph·ª• tr√°ch:</label>
                      <span>{selectedRecord.doctor}</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div className="modal-actions">
              <button
                className="btn-secondary"
                onClick={() => setShowModal(false)}
              >
                ƒê√≥ng
              </button>
              <button className="btn-primary">‚úèÔ∏è Ch·ªânh s·ª≠a</button>
              <button className="btn-success">üì§ Chia s·∫ª v·ªõi y t√°</button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

export default ManageHealthRecords;
