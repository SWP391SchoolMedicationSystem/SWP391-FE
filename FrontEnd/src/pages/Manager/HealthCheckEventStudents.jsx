import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { healthCheckEventService } from '../../services/healthCheckEventService';
import { studentService } from '../../services/studentService';
import LoadingSpinner from '../../components/common/LoadingSpinner';
import Modal from '../../components/common/Modal';
import '../../css/Manager/HealthCheckEventStudents.css';

const HealthCheckEventStudents = () => {
  const { eventId } = useParams();
  const navigate = useNavigate();
  
  const [eventData, setEventData] = useState(null);
  const [students, setStudents] = useState([]);
  const [loading, setLoading] = useState(true);
  const [searchTerm, setSearchTerm] = useState('');
  const [classFilter, setClassFilter] = useState('all');
  const [showDetailModal, setShowDetailModal] = useState(false);
  const [selectedStudent, setSelectedStudent] = useState(null);

  useEffect(() => {
    fetchEventData();
  }, [eventId]);

  const fetchEventData = async () => {
    try {
      setLoading(true);
      console.log('Fetching data for event ID:', eventId);
      
      // Fetch event details
      const eventDetails = await healthCheckEventService.getHealthCheckEventById(eventId);
      console.log('Event details:', eventDetails);
      setEventData(eventDetails);
      
      // Fetch students who participated in this event
      const recordsData = await healthCheckEventService.getStudentsByEventId(eventId);
      console.log('Health check records from API:', recordsData);
      
      // Fetch all students to get their information
      const allStudents = await studentService.getAllStudents();
      console.log('All students from API:', allStudents);
      
      if (recordsData && recordsData.length > 0) {
        // Combine health check records with student information
        const studentsList = recordsData.map(record => {
          const studentId = record.healthcheckrecord?.studentid;
          
          // Find student information from allStudents array
          const studentInfo = allStudents.find(student => student.studentId === studentId);
          
          return {
            studentId: studentId || 'N/A',
            fullname: studentInfo?.fullname || 'Ch∆∞a c√≥ t√™n',
            studentCode: studentInfo?.studentCode || 'Ch∆∞a c√≥',
            classname: studentInfo?.classname || 'Ch∆∞a c√≥',
            dob: studentInfo?.dob || null,
            age: studentInfo?.age || 'Ch∆∞a c√≥',
            gender: studentInfo?.gender,
            bloodType: studentInfo?.bloodType || 'Ch∆∞a c√≥',
            parent: studentInfo?.parent,
            // Health check data
            checkDate: record.healthcheckrecord?.checkdate,
            height: record.healthcheckrecord?.height,
            weight: record.healthcheckrecord?.weight,
            visionLeft: record.healthcheckrecord?.visionleft,
            visionRight: record.healthcheckrecord?.visionright,
            bloodPressure: record.healthcheckrecord?.bloodpressure,
            notes: record.healthcheckrecord?.notes,
            recordID: record.healthcheckrecord?.checkid
          };
        });
        
        console.log('Combined students list:', studentsList);
        setStudents(studentsList);
      } else {
        console.log('No students found for this event');
        setStudents([]);
      }
    } catch (error) {
      console.error('Error fetching event data:', error);
      setEventData(null);
      setStudents([]);
    } finally {
      setLoading(false);
    }
  };

  const handleViewDetail = (student) => {
    setSelectedStudent(student);
    setShowDetailModal(true);
  };

  const handleCloseModal = () => {
    setShowDetailModal(false);
    setSelectedStudent(null);
  };

  const handleBack = () => {
    navigate('/manager/health-check-events');
  };

  const handleRefresh = () => {
    fetchEventData();
  };

  // Filter students based on search term and class
  const filteredStudents = students.filter(student => {
    const studentName = student.fullname || '';
    const studentCode = student.studentCode || '';
    const studentClass = student.classname || '';
    
    const matchesSearch = studentName.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         studentCode.toLowerCase().includes(searchTerm.toLowerCase());
    
    const matchesClass = classFilter === 'all' || studentClass === classFilter;
    
    return matchesSearch && matchesClass;
  });

  // Calculate statistics
  const stats = {
    total: students.length,
    hasHeight: students.filter(s => s.height && s.height !== 'Ch∆∞a c√≥').length,
    hasWeight: students.filter(s => s.weight && s.weight !== 'Ch∆∞a c√≥').length,
    hasVision: students.filter(s => (s.visionLeft && s.visionLeft !== 'Ch∆∞a c√≥') || (s.visionRight && s.visionRight !== 'Ch∆∞a c√≥')).length
  };

  // Get unique classes for filter
  const uniqueClasses = [...new Set(students.map(s => s.classname).filter(Boolean))];

  if (loading) {
    return <LoadingSpinner />;
  }

  if (!eventData) {
    return (
      <div className="health-check-event-students-container">
        <div className="error-message">
          <h2>Kh√¥ng t√¨m th·∫•y s·ª± ki·ªán</h2>
          <p>S·ª± ki·ªán kh√°m s·ª©c kh·ªèe kh√¥ng t·ªìn t·∫°i ho·∫∑c ƒë√£ b·ªã x√≥a.</p>
          <button onClick={handleBack} className="back-button">
            ‚Üê Quay l·∫°i
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="health-check-event-students-container" style={{ backgroundColor: 'white', minHeight: '100vh' }}>
             {/* Header */}
       <div className="header" style={{ 
         background: 'linear-gradient(135deg, #2f5148 0%, #73ad67 100%)', 
         color: 'white',
         boxShadow: '0 4px 20px rgba(47, 81, 72, 0.3)',
         padding: '32px 40px',
         borderRadius: '24px',
         marginBottom: '30px'
       }}>
         <div style={{
           display: 'flex',
           justifyContent: 'space-between',
           alignItems: 'center',
           flexWrap: 'wrap',
           gap: '20px'
         }}>
                 <div>
           <h1 style={{ color: 'white', margin: 0, fontSize: '2rem', fontWeight: '600' }}>
             <i className="fas fa-calendar-medical" style={{ marginRight: '12px' }}></i>
             K·∫øt qu·∫£ kh√°m s·ª©c kh·ªèe c·ªßa h·ªçc sinh
           </h1>
           <p style={{ color: 'white', opacity: 0.95, margin: '8px 0 0 0', fontSize: '1.1rem' }}>
             {eventData.healthcheckeventname || 'S·ª± ki·ªán kh√°m s·ª©c kh·ªèe'}
           </p>
         </div>
         <div style={{ display: 'flex', gap: '12px' }}>
                     <button
             onClick={handleRefresh}
             style={{
               background: 'rgba(255, 255, 255, 0.15)',
               color: 'white',
               border: 'none',
               padding: '12px 20px',
               borderRadius: '12px',
               cursor: 'pointer',
               fontSize: '1rem',
               fontWeight: '500',
               display: 'flex',
               alignItems: 'center',
               gap: '8px',
               transition: 'all 0.3s ease'
             }}
             onMouseEnter={e => {
               e.currentTarget.style.background = 'rgba(255, 255, 255, 0.25)';
               e.currentTarget.style.transform = 'translateY(-2px)';
             }}
             onMouseLeave={e => {
               e.currentTarget.style.background = 'rgba(255, 255, 255, 0.15)';
               e.currentTarget.style.transform = 'translateY(0)';
             }}
           >
             <span style={{ fontSize: '1.2rem' }}>üîÑ</span>
             T·∫£i l·∫°i
           </button>
           <button
             onClick={handleBack}
             style={{
               background: 'rgba(255, 255, 255, 0.15)',
               color: 'white',
               border: 'none',
               padding: '12px 20px',
               borderRadius: '12px',
               cursor: 'pointer',
               fontSize: '1rem',
               fontWeight: '500',
               display: 'flex',
               alignItems: 'center',
               gap: '8px',
               transition: 'all 0.3s ease'
             }}
             onMouseEnter={e => {
               e.currentTarget.style.background = 'rgba(255, 255, 255, 0.25)';
               e.currentTarget.style.transform = 'translateY(-2px)';
             }}
             onMouseLeave={e => {
               e.currentTarget.style.background = 'rgba(255, 255, 255, 0.15)';
               e.currentTarget.style.transform = 'translateY(0)';
             }}
           >
             <span style={{ fontSize: '1.2rem' }}>‚Üê</span>
             Quay l·∫°i
           </button>
         </div>
       </div>
      </div>

                   {/* Event Information */}
       {eventData && (
         <div style={{
           background: '#e8f5e8',
           borderRadius: '16px',
           padding: '24px',
           marginBottom: '30px',
           boxShadow: '0 2px 10px rgba(115, 173, 103, 0.1)'
         }}>
           <h3 style={{
             margin: '0 0 20px 0',
             fontSize: '1.5rem',
             fontWeight: '600',
             color: '#2f5148',
             display: 'flex',
             alignItems: 'center',
             gap: '10px'
           }}>
             <i className="fas fa-info-circle" style={{ color: '#73ad67' }}></i>
             Th√¥ng tin s·ª± ki·ªán
           </h3>
           <div style={{
             display: 'grid',
             gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
             gap: '20px'
           }}>
             <div style={{
               display: 'flex',
               alignItems: 'center',
               gap: '12px'
             }}>
               <span style={{ color: '#73ad67', fontSize: '20px' }}>üìÖ</span>
               <div>
                 <div style={{ fontSize: '0.9rem', color: '#6c757d', fontWeight: '500' }}>Ng√†y kh√°m</div>
                 <div style={{ fontSize: '1rem', fontWeight: '600', color: '#2f5148' }}>
                   {eventData.eventdate ? new Date(eventData.eventdate).toLocaleDateString('vi-VN') : 'Ch∆∞a c√≥'}
                 </div>
               </div>
             </div>
             <div style={{
               display: 'flex',
               alignItems: 'center',
               gap: '12px'
             }}>
               <span style={{ color: '#73ad67', fontSize: '20px' }}>üìç</span>
               <div>
                 <div style={{ fontSize: '0.9rem', color: '#6c757d', fontWeight: '500' }}>ƒê·ªãa ƒëi·ªÉm</div>
                 <div style={{ fontSize: '1rem', fontWeight: '600', color: '#2f5148' }}>
                   {eventData.location || 'Ch∆∞a c√≥'}
                 </div>
               </div>
             </div>
             <div style={{
               display: 'flex',
               alignItems: 'center',
               gap: '12px'
             }}>
               <span style={{ color: '#73ad67', fontSize: '20px' }}>üë§</span>
               <div>
                 <div style={{ fontSize: '0.9rem', color: '#6c757d', fontWeight: '500' }}>T·ªï ch·ª©c</div>
                 <div style={{ fontSize: '1rem', fontWeight: '600', color: '#2f5148' }}>
                   {eventData.createdby || 'Ch∆∞a c√≥'}
                 </div>
               </div>
             </div>
           </div>
         </div>
       )}

             {/* Statistics */}
       <div style={{
         display: 'grid',
         gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
         gap: '20px',
         marginBottom: '30px'
       }}>
         <div style={{
           background: 'white',
           padding: '25px',
           borderRadius: '18px',
           display: 'flex',
           alignItems: 'center',
           gap: '20px',
           boxShadow: '0 2px 10px rgba(193, 203, 194, 0.3)',
           border: '1px solid #c1cbc2',
           transition: 'transform 0.2s ease, box-shadow 0.2s ease'
         }}>
           <div style={{
             padding: '15px',
             borderRadius: '50%',
             display: 'flex',
             alignItems: 'center',
             justifyContent: 'center',
             backgroundColor: 'rgba(191, 239, 161, 0.3)'
           }}>
             <span style={{ fontSize: '2.5rem' }}>üë•</span>
           </div>
           <div>
             <h3 style={{
               fontSize: '2rem',
               margin: 0,
               color: '#2f5148',
               fontWeight: 700,
               fontFamily: 'Satoshi, sans-serif'
             }}>
               {stats.total}
             </h3>
             <p style={{
               margin: '5px 0 0 0',
               color: '#97a19b',
               fontFamily: 'Satoshi, sans-serif'
             }}>
               T·ªïng h·ªçc sinh
             </p>
           </div>
         </div>
         
         <div style={{
           background: 'white',
           padding: '25px',
           borderRadius: '18px',
           display: 'flex',
           alignItems: 'center',
           gap: '20px',
           boxShadow: '0 2px 10px rgba(193, 203, 194, 0.3)',
           border: '1px solid #c1cbc2',
           transition: 'transform 0.2s ease, box-shadow 0.2s ease'
         }}>
           <div style={{
             padding: '15px',
             borderRadius: '50%',
             display: 'flex',
             alignItems: 'center',
             justifyContent: 'center',
             backgroundColor: 'rgba(255, 193, 7, 0.3)'
           }}>
             <span style={{ fontSize: '2.5rem' }}>üìè</span>
           </div>
           <div>
             <h3 style={{
               fontSize: '2rem',
               margin: 0,
               color: '#2f5148',
               fontWeight: 700,
               fontFamily: 'Satoshi, sans-serif'
             }}>
               {stats.hasHeight}
             </h3>
             <p style={{
               margin: '5px 0 0 0',
               color: '#97a19b',
               fontFamily: 'Satoshi, sans-serif'
             }}>
               C√≥ chi·ªÅu cao
             </p>
           </div>
         </div>
         
         <div style={{
           background: 'white',
           padding: '25px',
           borderRadius: '18px',
           display: 'flex',
           alignItems: 'center',
           gap: '20px',
           boxShadow: '0 2px 10px rgba(193, 203, 194, 0.3)',
           border: '1px solid #c1cbc2',
           transition: 'transform 0.2s ease, box-shadow 0.2s ease'
         }}>
           <div style={{
             padding: '15px',
             borderRadius: '50%',
             display: 'flex',
             alignItems: 'center',
             justifyContent: 'center',
             backgroundColor: 'rgba(40, 167, 69, 0.3)'
           }}>
             <span style={{ fontSize: '2.5rem' }}>‚öñÔ∏è</span>
           </div>
           <div>
             <h3 style={{
               fontSize: '2rem',
               margin: 0,
               color: '#2f5148',
               fontWeight: 700,
               fontFamily: 'Satoshi, sans-serif'
             }}>
               {stats.hasWeight}
             </h3>
             <p style={{
               margin: '5px 0 0 0',
               color: '#97a19b',
               fontFamily: 'Satoshi, sans-serif'
             }}>
               C√≥ c√¢n n·∫∑ng
             </p>
           </div>
         </div>
         
         <div style={{
           background: 'white',
           padding: '25px',
           borderRadius: '18px',
           display: 'flex',
           alignItems: 'center',
           gap: '20px',
           boxShadow: '0 2px 10px rgba(193, 203, 194, 0.3)',
           border: '1px solid #c1cbc2',
           transition: 'transform 0.2s ease, box-shadow 0.2s ease'
         }}>
           <div style={{
             padding: '15px',
             borderRadius: '50%',
             display: 'flex',
             alignItems: 'center',
             justifyContent: 'center',
             backgroundColor: 'rgba(13, 110, 253, 0.3)'
           }}>
             <span style={{ fontSize: '2.5rem' }}>üëÅÔ∏è</span>
           </div>
           <div>
             <h3 style={{
               fontSize: '2rem',
               margin: 0,
               color: '#2f5148',
               fontWeight: 700,
               fontFamily: 'Satoshi, sans-serif'
             }}>
               {stats.hasVision}
             </h3>
             <p style={{
               margin: '5px 0 0 0',
               color: '#97a19b',
               fontFamily: 'Satoshi, sans-serif'
             }}>
               C√≥ th·ªã l·ª±c
             </p>
           </div>
         </div>
       </div>

             {/* Search Filter */}
       <div style={{
         background: 'white',
         borderRadius: '16px',
         padding: '24px',
         marginBottom: '30px',
         boxShadow: '0 2px 10px rgba(0, 0, 0, 0.1)',
         border: '1px solid #e9ecef'
       }}>
         <h3 style={{
           margin: '0 0 20px 0',
           fontSize: '1.3rem',
           fontWeight: '600',
           color: '#2f5148',
           display: 'flex',
           alignItems: 'center',
           gap: '10px'
         }}>
           <i className="fas fa-filter" style={{ color: '#73ad67' }}></i>
           B·ªô l·ªçc t√¨m ki·∫øm
         </h3>
         <div style={{
           display: 'grid',
           gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
           gap: '20px'
         }}>
           <div>
             <label style={{
               display: 'block',
               marginBottom: '8px',
               fontSize: '0.9rem',
               fontWeight: '500',
               color: '#6c757d'
             }}>
               T√¨m ki·∫øm h·ªçc sinh:
             </label>
             <input
               type="text"
               placeholder="Nh·∫≠p t√™n h·ªçc sinh ho·∫∑c ID..."
               value={searchTerm}
               onChange={(e) => setSearchTerm(e.target.value)}
               style={{
                 width: '100%',
                 padding: '12px 16px',
                 border: '1px solid #e9ecef',
                 borderRadius: '8px',
                 fontSize: '0.9rem',
                 outline: 'none',
                 transition: 'border-color 0.2s ease'
               }}
             />
           </div>
           <div>
             <label style={{
               display: 'block',
               marginBottom: '8px',
               fontSize: '0.9rem',
               fontWeight: '500',
               color: '#6c757d'
             }}>
               L·ªõp h·ªçc:
             </label>
             <select
               value={classFilter}
               onChange={(e) => setClassFilter(e.target.value)}
               style={{
                 width: '100%',
                 padding: '12px 16px',
                 border: '1px solid #e9ecef',
                 borderRadius: '8px',
                 fontSize: '0.9rem',
                 backgroundColor: 'white',
                 outline: 'none',
                 transition: 'border-color 0.2s ease'
               }}
             >
               <option value="all">T·∫•t c·∫£ l·ªõp</option>
               {uniqueClasses.map(className => (
                 <option key={className} value={className}>{className}</option>
               ))}
             </select>
           </div>
         </div>
       </div>

                    {/* Students Table */}
       <div style={{
         background: 'white',
         borderRadius: '20px',
         padding: '25px',
         marginBottom: '30px',
         boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',
         border: '1px solid #c1cbc2',
         transition: 'all 0.3s ease'
       }}>
         <h2 style={{
           margin: '0 0 30px 0',
           color: '#2f5148',
           fontFamily: 'Satoshi, sans-serif',
           fontSize: '1.5rem',
           fontWeight: 600,
           display: 'flex',
           alignItems: 'center',
           gap: '10px'
         }}>
           <i className="fas fa-school" style={{ color: '#97a19b', fontSize: '1.5rem' }}></i>
           K·∫øt qu·∫£ kh√°m s·ª©c kh·ªèe c·ªßa h·ªçc sinh ({filteredStudents.length})
         </h2>

         {filteredStudents.length > 0 ? (
           <div style={{
             overflowX: 'auto',
             borderRadius: '12px',
             border: '1px solid #e9ecef'
           }}>
             <table style={{
               width: '100%',
               borderCollapse: 'collapse',
               backgroundColor: 'white'
             }}>
               <thead>
                 <tr style={{
                   background: 'linear-gradient(135deg, #2f5148 0%, #73ad67 100%)',
                   color: 'white'
                 }}>
                   <th style={{
                     padding: '16px 12px',
                     textAlign: 'left',
                     fontWeight: '600',
                     fontSize: '0.9rem',
                     borderBottom: '1px solid #e9ecef'
                   }}>STT</th>
                   <th style={{
                     padding: '16px 12px',
                     textAlign: 'left',
                     fontWeight: '600',
                     fontSize: '0.9rem',
                     borderBottom: '1px solid #e9ecef'
                   }}>T√™n h·ªçc sinh</th>
                   <th style={{
                     padding: '16px 12px',
                     textAlign: 'left',
                     fontWeight: '600',
                     fontSize: '0.9rem',
                     borderBottom: '1px solid #e9ecef'
                   }}>L·ªõp</th>
                   <th style={{
                     padding: '16px 12px',
                     textAlign: 'left',
                     fontWeight: '600',
                     fontSize: '0.9rem',
                     borderBottom: '1px solid #e9ecef'
                   }}>Ng√†y sinh</th>
                   <th style={{
                     padding: '16px 12px',
                     textAlign: 'left',
                     fontWeight: '600',
                     fontSize: '0.9rem',
                     borderBottom: '1px solid #e9ecef'
                   }}>Ng√†y kh√°m</th>
                   <th style={{
                     padding: '16px 12px',
                     textAlign: 'left',
                     fontWeight: '600',
                     fontSize: '0.9rem',
                     borderBottom: '1px solid #e9ecef'
                   }}>Chi·ªÅu cao</th>
                   <th style={{
                     padding: '16px 12px',
                     textAlign: 'left',
                     fontWeight: '600',
                     fontSize: '0.9rem',
                     borderBottom: '1px solid #e9ecef'
                   }}>C√¢n n·∫∑ng</th>
                   <th style={{
                     padding: '16px 12px',
                     textAlign: 'left',
                     fontWeight: '600',
                     fontSize: '0.9rem',
                     borderBottom: '1px solid #e9ecef'
                   }}>Th·ªã l·ª±c</th>
                   <th style={{
                     padding: '16px 12px',
                     textAlign: 'left',
                     fontWeight: '600',
                     fontSize: '0.9rem',
                     borderBottom: '1px solid #e9ecef'
                   }}>Huy·∫øt √°p</th>
                   <th style={{
                     padding: '16px 12px',
                     textAlign: 'left',
                     fontWeight: '600',
                     fontSize: '0.9rem',
                     borderBottom: '1px solid #e9ecef'
                   }}>Thao t√°c</th>
                 </tr>
               </thead>
               <tbody>
                 {filteredStudents.map((student, index) => (
                   <tr key={student.studentId} style={{
                     borderBottom: '1px solid #e9ecef',
                     transition: 'background-color 0.2s ease'
                   }}
                   onMouseEnter={(e) => {
                     e.currentTarget.style.backgroundColor = '#f8f9fa';
                   }}
                   onMouseLeave={(e) => {
                     e.currentTarget.style.backgroundColor = 'white';
                   }}
                   >
                     <td style={{
                       padding: '16px 12px',
                       color: '#495057',
                       fontSize: '0.9rem'
                     }}>{index + 1}</td>
                     <td style={{
                       padding: '16px 12px',
                       color: '#495057',
                       fontWeight: '500',
                       fontSize: '0.9rem'
                     }}>{student.fullname || 'Ch∆∞a c√≥ t√™n'}</td>
                     <td style={{
                       padding: '16px 12px',
                       color: '#495057',
                       fontSize: '0.9rem'
                     }}>{student.classname || 'Ch∆∞a c√≥'}</td>
                     <td style={{
                       padding: '16px 12px',
                       color: '#495057',
                       fontSize: '0.9rem'
                     }}>
                       {student.dob 
                         ? new Date(student.dob).toLocaleDateString('vi-VN')
                         : 'Ch∆∞a c√≥'
                       }
                     </td>
                     <td style={{
                       padding: '16px 12px',
                       color: '#495057',
                       fontSize: '0.9rem'
                     }}>
                       {student.checkDate 
                         ? new Date(student.checkDate).toLocaleDateString('vi-VN')
                         : 'Ch∆∞a c√≥'
                       }
                     </td>
                     <td style={{
                       padding: '16px 12px',
                       color: '#495057',
                       fontSize: '0.9rem'
                     }}>{student.height ? `${student.height} cm` : 'Ch∆∞a c√≥'}</td>
                     <td style={{
                       padding: '16px 12px',
                       color: '#495057',
                       fontSize: '0.9rem'
                     }}>{student.weight ? `${student.weight} kg` : 'Ch∆∞a c√≥'}</td>
                     <td style={{
                       padding: '16px 12px',
                       color: '#495057',
                       fontSize: '0.9rem'
                     }}>
                       {student.visionLeft && student.visionRight 
                         ? `${student.visionLeft}/${student.visionRight}`
                         : student.visionLeft || student.visionRight || 'Ch∆∞a c√≥'
                       }
                     </td>
                     <td style={{
                       padding: '16px 12px',
                       color: '#495057',
                       fontSize: '0.9rem'
                     }}>{student.bloodPressure || 'Ch∆∞a c√≥'}</td>
                     <td style={{ padding: '16px 12px' }}>
                       <button
                         onClick={() => handleViewDetail(student)}
                         title="Xem chi ti·∫øt"
                         style={{
                           background: 'linear-gradient(135deg, #2f5148 0%, #73ad67 100%)',
                           color: 'white',
                           border: 'none',
                           padding: '10px 16px',
                           borderRadius: '8px',
                           cursor: 'pointer',
                           fontSize: '0.85rem',
                           fontWeight: '500',
                           display: 'flex',
                           alignItems: 'center',
                           gap: '6px',
                           transition: 'all 0.2s ease'
                         }}
                         onMouseEnter={(e) => {
                           e.currentTarget.style.transform = 'translateY(-1px)';
                           e.currentTarget.style.boxShadow = '0 4px 8px rgba(47, 81, 72, 0.3)';
                         }}
                         onMouseLeave={(e) => {
                           e.currentTarget.style.transform = 'translateY(0)';
                           e.currentTarget.style.boxShadow = 'none';
                         }}
                       >
                         üëÅÔ∏è Chi ti·∫øt
                       </button>
                     </td>
                   </tr>
                 ))}
               </tbody>
             </table>
           </div>
         ) : (
           <div style={{
             padding: '60px 20px',
             textAlign: 'center',
             color: '#6c757d',
             backgroundColor: '#f8f9fa',
             borderRadius: '12px',
             border: '1px solid #e9ecef'
           }}>
             <div style={{ fontSize: '3rem', marginBottom: '20px', opacity: 0.5 }}>üìã</div>
             <p style={{ margin: 0, fontSize: '1.1rem', fontWeight: '500' }}>Kh√¥ng c√≥ d·ªØ li·ªáu h·ªçc sinh n√†o</p>
             <p style={{ margin: '10px 0 0 0', fontSize: '0.9rem', opacity: 0.7 }}>H√£y ki·ªÉm tra l·∫°i b·ªô l·ªçc ho·∫∑c th·ª≠ l·∫°i sau</p>
           </div>
         )}
       </div>

      {/* Detail Modal */}
      {showDetailModal && selectedStudent && (
        <Modal
          isOpen={showDetailModal}
          onClose={handleCloseModal}
          title="Chi ti·∫øt th√¥ng tin h·ªçc sinh"
          size="large"
        >
          <div className="student-detail-content">
            <div className="detail-section">
              <h3>Th√¥ng tin h·ªçc sinh</h3>
              <div className="detail-grid">
                <div className="detail-item">
                  <span className="label">H·ªç v√† t√™n:</span>
                  <span className="value">
                    {selectedStudent.fullname || 'Kh√¥ng c√≥'}
                  </span>
                </div>
                <div className="detail-item">
                  <span className="label">M√£ h·ªçc sinh:</span>
                  <span className="value">
                    {selectedStudent.studentCode || 'Kh√¥ng c√≥'}
                  </span>
                </div>
                <div className="detail-item">
                  <span className="label">L·ªõp:</span>
                  <span className="value">
                    {selectedStudent.classname || 'Kh√¥ng c√≥'}
                  </span>
                </div>
                <div className="detail-item">
                  <span className="label">Ng√†y sinh:</span>
                  <span className="value">
                    {selectedStudent.dob 
                      ? new Date(selectedStudent.dob).toLocaleDateString('vi-VN')
                      : 'Kh√¥ng c√≥'
                    }
                  </span>
                </div>
                <div className="detail-item">
                  <span className="label">Tu·ªïi:</span>
                  <span className="value">
                    {selectedStudent.age || 'Kh√¥ng c√≥'}
                  </span>
                </div>
                <div className="detail-item">
                  <span className="label">Gi·ªõi t√≠nh:</span>
                  <span className="value">
                    {selectedStudent.gender ? 'Nam' : 'N·ªØ'}
                  </span>
                </div>
                <div className="detail-item">
                  <span className="label">Nh√≥m m√°u:</span>
                  <span className="value">
                    {selectedStudent.bloodType || 'Kh√¥ng c√≥'}
                  </span>
                </div>
              </div>
            </div>

            {selectedStudent.parent && (
              <div className="detail-section">
                <h3>Th√¥ng tin ph·ª• huynh</h3>
                <div className="detail-grid">
                  <div className="detail-item">
                    <span className="label">H·ªç v√† t√™n ph·ª• huynh:</span>
                    <span className="value">
                      {selectedStudent.parent.fullname || 'Kh√¥ng c√≥'}
                    </span>
                  </div>
                  <div className="detail-item">
                    <span className="label">Email:</span>
                    <span className="value">
                      {selectedStudent.parent.email || 'Kh√¥ng c√≥'}
                    </span>
                  </div>
                  <div className="detail-item">
                    <span className="label">S·ªë ƒëi·ªán tho·∫°i:</span>
                    <span className="value">
                      {selectedStudent.parent.phone || 'Kh√¥ng c√≥'}
                    </span>
                  </div>
                  <div className="detail-item">
                    <span className="label">ƒê·ªãa ch·ªâ:</span>
                    <span className="value">
                      {selectedStudent.parent.address || 'Kh√¥ng c√≥'}
                    </span>
                  </div>
                </div>
              </div>
            )}

                         <div className="detail-section">
               <h3>Th√¥ng tin kh√°m s·ª©c kh·ªèe</h3>
               <div className="detail-grid">
                 <div className="detail-item">
                   <span className="label">Ng√†y kh√°m:</span>
                   <span className="value">
                     {selectedStudent.checkDate 
                       ? new Date(selectedStudent.checkDate).toLocaleDateString('vi-VN')
                       : 'Ch∆∞a c√≥'
                     }
                   </span>
                 </div>
                 <div className="detail-item">
                   <span className="label">Chi·ªÅu cao:</span>
                   <span className="value">
                     {selectedStudent.height ? `${selectedStudent.height} cm` : 'Ch∆∞a c√≥'}
                   </span>
                 </div>
                 <div className="detail-item">
                   <span className="label">C√¢n n·∫∑ng:</span>
                   <span className="value">
                     {selectedStudent.weight ? `${selectedStudent.weight} kg` : 'Ch∆∞a c√≥'}
                   </span>
                 </div>
                 <div className="detail-item">
                   <span className="label">Th·ªã l·ª±c tr√°i:</span>
                   <span className="value">
                     {selectedStudent.visionLeft || 'Ch∆∞a c√≥'}
                   </span>
                 </div>
                 <div className="detail-item">
                   <span className="label">Th·ªã l·ª±c ph·∫£i:</span>
                   <span className="value">
                     {selectedStudent.visionRight || 'Ch∆∞a c√≥'}
                   </span>
                 </div>
                 <div className="detail-item">
                   <span className="label">Huy·∫øt √°p:</span>
                   <span className="value">
                     {selectedStudent.bloodPressure || 'Ch∆∞a c√≥'}
                   </span>
                 </div>
               </div>
               
               <div className="detail-item full-width">
                 <span className="label">Ghi ch√∫:</span>
                 <div className="value description">
                   {selectedStudent.notes || 'Kh√¥ng c√≥ ghi ch√∫'}
                 </div>
               </div>
             </div>

             <div className="detail-section">
               <h3>Th√¥ng tin s·ª± ki·ªán</h3>
               <div className="detail-grid">
                 <div className="detail-item">
                   <span className="label">T√™n s·ª± ki·ªán:</span>
                   <span className="value">
                     {eventData.healthcheckeventname || 'Kh√¥ng c√≥'}
                   </span>
                 </div>
                 <div className="detail-item">
                   <span className="label">Ng√†y s·ª± ki·ªán:</span>
                   <span className="value">
                     {eventData.eventdate 
                       ? new Date(eventData.eventdate).toLocaleDateString('vi-VN')
                       : 'Kh√¥ng c√≥'
                     }
                   </span>
                 </div>
                 <div className="detail-item">
                   <span className="label">ƒê·ªãa ƒëi·ªÉm:</span>
                   <span className="value">
                     {eventData.location || 'Kh√¥ng c√≥'}
                   </span>
                 </div>
                 <div className="detail-item">
                   <span className="label">T·ªï ch·ª©c:</span>
                   <span className="value">
                     {eventData.createdby || 'Kh√¥ng c√≥'}
                   </span>
                 </div>
               </div>
               
               <div className="detail-item full-width">
                 <span className="label">M√¥ t·∫£ s·ª± ki·ªán:</span>
                 <div className="value description">
                   {eventData.healthcheckeventdescription || 'Kh√¥ng c√≥ m√¥ t·∫£'}
                 </div>
               </div>
             </div>
          </div>
        </Modal>
      )}
    </div>
  );
};

export default HealthCheckEventStudents; 