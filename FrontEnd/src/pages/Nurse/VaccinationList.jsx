import React, { useState } from "react";
import "../../css/Nurse/VaccinationList.css";

function VaccinationList() {
  // Mock data for student vaccination records
  const [students] = useState([
    {
      id: 1,
      studentId: "MN001",
      fullName: "Nguy·ªÖn VƒÉn An",
      className: "M·∫ßm",
      dateOfBirth: "2020-05-15",
      parentName: "Nguy·ªÖn Th·ªã Hoa",
      parentPhone: "0912345678",
      vaccineName: "Vaccine Vi√™m gan B",
      vaccineType: "Engerix-B",
      scheduledDate: "2024-03-20",
      actualDate: "2024-03-20",
      status: "ƒê√£ ti√™m",
      notes: "Ti√™m th√†nh c√¥ng, kh√¥ng c√≥ t√°c d·ª•ng ph·ª•",
      healthStatus: "T·ªët",
      consentForm: "ƒê√£ k√Ω",
      createdDate: "2024-03-15",
    },
    {
      id: 2,
      studentId: "MN002",
      fullName: "Tr·∫ßn Th·ªã B√¨nh",
      className: "Ch·ªìi",
      dateOfBirth: "2020-08-22",
      parentName: "Tr·∫ßn VƒÉn Nam",
      parentPhone: "0923456789",
      vaccineName: "Vaccine DPT",
      vaccineType: "Adacel",
      scheduledDate: "2024-03-20",
      actualDate: null,
      status: "T·ª´ ch·ªëi",
      notes: "Ph·ª• huynh t·ª´ ch·ªëi cho con ti√™m vaccine",
      healthStatus: "B√¨nh th∆∞·ªùng",
      consentForm: "T·ª´ ch·ªëi",
      createdDate: "2024-03-15",
      rejectionReason: "Lo ng·∫°i v·ªÅ t√°c d·ª•ng ph·ª•",
    },
    {
      id: 3,
      studentId: "MN003",
      fullName: "L√™ Minh C∆∞·ªùng",
      className: "L√° 1",
      dateOfBirth: "2019-12-10",
      parentName: "L√™ Th·ªã Mai",
      parentPhone: "0934567890",
      vaccineName: "Vaccine C√∫m",
      vaccineType: "Vaxigrip",
      scheduledDate: "2024-03-22",
      actualDate: "2024-03-22",
      status: "ƒê√£ ti√™m",
      notes: "Ti√™m th√†nh c√¥ng, c√≥ ph·∫£n ·ª©ng nh·∫π t·∫°i ch·ªó ti√™m",
      healthStatus: "T·ªët",
      consentForm: "ƒê√£ k√Ω",
      createdDate: "2024-03-18",
    },
    {
      id: 4,
      studentId: "MN004",
      fullName: "Ph·∫°m Th·ªã Di·ªáu",
      className: "L√° 2",
      dateOfBirth: "2019-03-08",
      parentName: "Ph·∫°m VƒÉn H√πng",
      parentPhone: "0945678901",
      vaccineName: "Vaccine Vi√™m gan B",
      vaccineType: "Engerix-B",
      scheduledDate: "2024-03-25",
      actualDate: null,
      status: "Ch·ªù ti√™m",
      notes: "ƒê√£ h·∫πn l·ªãch ti√™m",
      healthStatus: "T·ªët",
      consentForm: "ƒê√£ k√Ω",
      createdDate: "2024-03-20",
    },
    {
      id: 5,
      studentId: "MN005",
      fullName: "Ho√†ng VƒÉn Em",
      className: "L√° 3",
      dateOfBirth: "2019-07-30",
      parentName: "Ho√†ng Th·ªã Lan",
      parentPhone: "0956789012",
      vaccineName: "Vaccine DPT",
      vaccineType: "Adacel",
      scheduledDate: "2024-03-20",
      actualDate: null,
      status: "T·ª´ ch·ªëi",
      notes: "H·ªçc sinh c√≥ ti·ªÅn s·ª≠ d·ªã ·ª©ng",
      healthStatus: "C√≥ d·ªã ·ª©ng",
      consentForm: "T·ª´ ch·ªëi",
      createdDate: "2024-03-15",
      rejectionReason: "C√≥ ti·ªÅn s·ª≠ d·ªã ·ª©ng v·ªõi th√†nh ph·∫ßn vaccine",
    },
    {
      id: 6,
      studentId: "MN006",
      fullName: "V√µ Th·ªã Ph∆∞·ª£ng",
      className: "Ch·ªìi",
      dateOfBirth: "2020-11-18",
      parentName: "V√µ VƒÉn Giang",
      parentPhone: "0967890123",
      vaccineName: "Vaccine C√∫m",
      vaccineType: "Vaxigrip",
      scheduledDate: "2024-03-22",
      actualDate: "2024-03-22",
      status: "ƒê√£ ti√™m",
      notes: "Ti√™m th√†nh c√¥ng, kh√¥ng c√≥ ph·∫£n ·ª©ng b·∫•t th∆∞·ªùng",
      healthStatus: "T·ªët",
      consentForm: "ƒê√£ k√Ω",
      createdDate: "2024-03-18",
    },
  ]);

  // Filter and search states
  const [searchTerm, setSearchTerm] = useState("");
  const [filterStatus, setFilterStatus] = useState("");
  const [filterClass, setFilterClass] = useState("");
  const [filterVaccine, setFilterVaccine] = useState("");
  const [showModal, setShowModal] = useState(false);
  const [currentStudent, setCurrentStudent] = useState(null);

  // Available options
  const statuses = ["Ch·ªù ti√™m", "ƒê√£ ti√™m", "T·ª´ ch·ªëi", "Ho√£n ti√™m"];
  const classes = ["M·∫ßm", "Ch·ªìi", "L√° 1", "L√° 2", "L√° 3"];
  const vaccines = [
    "Vaccine Vi√™m gan B",
    "Vaccine DPT",
    "Vaccine C√∫m",
    "Vaccine MMR",
    "Vaccine Varicella",
    "Vaccine Polio",
  ];

  // Filter students based on search and filters
  const filteredStudents = students.filter((student) => {
    const matchesSearch =
      student.fullName.toLowerCase().includes(searchTerm.toLowerCase()) ||
      student.studentId.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesStatus =
      filterStatus === "" || student.status === filterStatus;
    const matchesClass =
      filterClass === "" || student.className === filterClass;
    const matchesVaccine =
      filterVaccine === "" || student.vaccineName === filterVaccine;

    return matchesSearch && matchesStatus && matchesClass && matchesVaccine;
  });

  // Handle viewing record
  const handleViewRecord = (student) => {
    setCurrentStudent(student);
    setShowModal(true);
  };

  // Get status badge class
  const getStatusBadgeClass = (status) => {
    switch (status) {
      case "ƒê√£ ti√™m":
        return "status-completed";
      case "Ch·ªù ti√™m":
        return "status-pending";
      case "T·ª´ ch·ªëi":
        return "status-rejected";
      case "Ho√£n ti√™m":
        return "status-delayed";
      default:
        return "status-pending";
    }
  };

  // Statistics
  const stats = {
    total: students.length,
    completed: students.filter((s) => s.status === "ƒê√£ ti√™m").length,
    pending: students.filter((s) => s.status === "Ch·ªù ti√™m").length,
    rejected: students.filter((s) => s.status === "T·ª´ ch·ªëi").length,
  };

  return (
    <div className="vaccination-container">
      <div className="vaccination-header">
        <h1>üìã Danh S√°ch Ti√™m Ch·ªßng</h1>
        <p>Xem th√¥ng tin ti√™m ch·ªßng c·ªßa h·ªçc sinh</p>
      </div>

      {/* Statistics Cards */}
      <div className="stats-container">
        <div className="stat-card total">
          <div className="stat-icon">üë•</div>
          <div className="stat-content">
            <h3>{stats.total}</h3>
            <p>T·ªïng s·ªë h·ªçc sinh</p>
          </div>
        </div>
        <div className="stat-card completed">
          <div className="stat-icon">‚úÖ</div>
          <div className="stat-content">
            <h3>{stats.completed}</h3>
            <p>ƒê√£ ti√™m ch·ªßng</p>
          </div>
        </div>
        <div className="stat-card pending">
          <div className="stat-icon">‚è≥</div>
          <div className="stat-content">
            <h3>{stats.pending}</h3>
            <p>Ch·ªù ti√™m ch·ªßng</p>
          </div>
        </div>
        <div className="stat-card rejected">
          <div className="stat-icon">‚ùå</div>
          <div className="stat-content">
            <h3>{stats.rejected}</h3>
            <p>T·ª´ ch·ªëi</p>
          </div>
        </div>
      </div>

      {/* Controls */}
      <div className="controls-container">
        <div className="search-controls">
          <input
            type="text"
            placeholder="T√¨m ki·∫øm theo t√™n ho·∫∑c m√£ h·ªçc sinh..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="search-input"
          />
        </div>

        <div className="filter-controls">
          <select
            value={filterStatus}
            onChange={(e) => setFilterStatus(e.target.value)}
            className="filter-select"
          >
            <option value="">T·∫•t c·∫£ tr·∫°ng th√°i</option>
            {statuses.map((status) => (
              <option key={status} value={status}>
                {status}
              </option>
            ))}
          </select>

          <select
            value={filterClass}
            onChange={(e) => setFilterClass(e.target.value)}
            className="filter-select"
          >
            <option value="">T·∫•t c·∫£ l·ªõp</option>
            {classes.map((className) => (
              <option key={className} value={className}>
                {className}
              </option>
            ))}
          </select>

          <select
            value={filterVaccine}
            onChange={(e) => setFilterVaccine(e.target.value)}
            className="filter-select"
          >
            <option value="">T·∫•t c·∫£ vaccine</option>
            {vaccines.map((vaccine) => (
              <option key={vaccine} value={vaccine}>
                {vaccine}
              </option>
            ))}
          </select>
        </div>
      </div>

      {/* Table */}
      <div className="table-container">
        <table className="vaccination-table">
          <thead>
            <tr>
              <th>M√£ HS</th>
              <th>H·ªç t√™n</th>
              <th>L·ªõp</th>
              <th>Ph·ª• huynh</th>
              <th>Vaccine</th>
              <th>Ng√†y h·∫πn</th>
              <th>Tr·∫°ng th√°i</th>
              <th>S·ª©c kh·ªèe</th>
              <th>Thao t√°c</th>
            </tr>
          </thead>
          <tbody>
            {filteredStudents.map((student) => (
              <tr key={student.id}>
                <td className="student-id">{student.studentId}</td>
                <td>
                  <div className="student-info">
                    <strong>{student.fullName}</strong>
                    <small>{student.dateOfBirth}</small>
                  </div>
                </td>
                <td className="class-name">{student.className}</td>
                <td>
                  <div className="parent-info">
                    <div>{student.parentName}</div>
                    <small>{student.parentPhone}</small>
                  </div>
                </td>
                <td>
                  <div className="vaccine-info">
                    <div>{student.vaccineName}</div>
                    <small>{student.vaccineType}</small>
                  </div>
                </td>
                <td>{student.scheduledDate}</td>
                <td>
                  <span
                    className={`status-badge ${getStatusBadgeClass(
                      student.status
                    )}`}
                  >
                    {student.status}
                  </span>
                </td>
                <td>
                  <span
                    className={`health-status ${
                      student.healthStatus === "C√≥ d·ªã ·ª©ng"
                        ? "warning"
                        : "normal"
                    }`}
                  >
                    {student.healthStatus}
                  </span>
                </td>
                <td>
                  <div className="action-buttons">
                    <button
                      className="btn-view"
                      onClick={() => handleViewRecord(student)}
                      title="Xem chi ti·∫øt"
                    >
                      üëÅÔ∏è
                    </button>
                  </div>
                </td>
              </tr>
            ))}
          </tbody>
        </table>

        {filteredStudents.length === 0 && (
          <div className="no-data">
            <p>Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu ph√π h·ª£p</p>
          </div>
        )}
      </div>

      {/* Modal */}
      {showModal && currentStudent && (
        <div className="modal-overlay" onClick={() => setShowModal(false)}>
          <div className="modal-content" onClick={(e) => e.stopPropagation()}>
            <div className="modal-header">
              <h3>Chi ti·∫øt b·∫£n ghi ti√™m ch·ªßng</h3>
              <button
                className="modal-close"
                onClick={() => setShowModal(false)}
              >
                √ó
              </button>
            </div>

            <div className="modal-body">
              <div className="student-details">
                <div className="detail-grid">
                  <div className="detail-item">
                    <label>M√£ h·ªçc sinh:</label>
                    <span>{currentStudent.studentId}</span>
                  </div>
                  <div className="detail-item">
                    <label>H·ªç t√™n:</label>
                    <span>{currentStudent.fullName}</span>
                  </div>
                  <div className="detail-item">
                    <label>L·ªõp:</label>
                    <span>{currentStudent.className}</span>
                  </div>
                  <div className="detail-item">
                    <label>Ng√†y sinh:</label>
                    <span>{currentStudent.dateOfBirth}</span>
                  </div>
                  <div className="detail-item">
                    <label>Ph·ª• huynh:</label>
                    <span>{currentStudent.parentName}</span>
                  </div>
                  <div className="detail-item">
                    <label>SƒêT ph·ª• huynh:</label>
                    <span>{currentStudent.parentPhone}</span>
                  </div>
                  <div className="detail-item">
                    <label>T√™n vaccine:</label>
                    <span>{currentStudent.vaccineName}</span>
                  </div>
                  <div className="detail-item">
                    <label>Lo·∫°i vaccine:</label>
                    <span>{currentStudent.vaccineType}</span>
                  </div>
                  <div className="detail-item">
                    <label>Ng√†y h·∫πn:</label>
                    <span>{currentStudent.scheduledDate}</span>
                  </div>
                  {currentStudent.actualDate && (
                    <div className="detail-item">
                      <label>Ng√†y ti√™m th·ª±c t·∫ø:</label>
                      <span>{currentStudent.actualDate}</span>
                    </div>
                  )}
                  <div className="detail-item">
                    <label>Tr·∫°ng th√°i:</label>
                    <span
                      className={`status-badge ${getStatusBadgeClass(
                        currentStudent.status
                      )}`}
                    >
                      {currentStudent.status}
                    </span>
                  </div>
                  <div className="detail-item">
                    <label>T√¨nh tr·∫°ng s·ª©c kh·ªèe:</label>
                    <span>{currentStudent.healthStatus}</span>
                  </div>
                  <div className="detail-item">
                    <label>Phi·∫øu ƒë·ªìng √Ω:</label>
                    <span>{currentStudent.consentForm}</span>
                  </div>
                  {currentStudent.rejectionReason && (
                    <div className="detail-item full-width">
                      <label>L√Ω do t·ª´ ch·ªëi:</label>
                      <span className="rejection-reason">
                        {currentStudent.rejectionReason}
                      </span>
                    </div>
                  )}
                  <div className="detail-item full-width">
                    <label>Ghi ch√∫:</label>
                    <span>{currentStudent.notes}</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

export default VaccinationList;
